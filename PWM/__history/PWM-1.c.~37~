#INCLUDE <16f887.h>
#DEVICE ADC=10 
#FUSES XT,NOWDT,NOPROTECT,NOLVP,PUT,BROWNOUT, 
#USE delay(internal=4000000)  
#USE i2c(Master,Fast=100000, sda=PIN_C4, scl=PIN_C3,force_sw)  
#DEFINE USE_PORTB_KBD 
#INCLUDE "i2c_Flex_LCD.c"
#INCLUDE <KBD_4x4.c>
#USE     STANDARD_IO(B) //activa las resistencias de pull-up
#BYTE porta = 5 // Identificador para el puerto A. 
#BYTE portb = 6 // Identificador para el puerto B. 
#BYTE portc = 7 // Identificador para el puerto C. 
#BYTE portd = 8 // Identificador para el puerto D. 
#BYTE porte = 9 // Identificador para el puerto E.
///////////////////VARIABLES Y FUNCIONES///////////////////////////////////////
float duty=0;
float temperatura=0;
int Timer2,Poscaler;
int SP=0;
char TECLA; //variable para el valor de la tecla presionada
void config();
//////////////FUNCION PARA LEER EL TECLADO/////////////////////////////////////
char tecla_time(void) {
   char tecla='\0'; //ponemos la variable en blanco (la borramos)
   unsigned int16 timeout;
   timeout=0;
   tecla=kbd_getc(); //Captura valor del teclado
      while(tecla=='\0' && (++timeout< (20000))) //preguntamos por el teclado por 100 ms
      {
         delay_us(10);
         tecla=kbd_getc(); //Captura valor del teclado
      }
   return(tecla);
}
///////////////////////////////////////////////////////////////////////////////
void main() {
//////PUERTOS////////////
PORT_B_PULLUPS (0xFF); //usamos las resistencias pull-up
SET_TRIS_A(0B00000001);
SET_TRIS_B(0);
SET_TRIS_C(0);
/////////LCD//////////
lcd_init(0x4E,16,2);
lcd_backlight_led(ON); //Enciende la luz de Fondo
lcd_clear();  //Limpia el LCD
///////////PWM/////////////
   Timer2=249;
   Poscaler=1;
   setup_timer_2(t2_div_by_4,Timer2,Poscaler);   //Configuracion de Timer 2 para establecer frec. PWM a 1kHz
   setup_ccp1(ccp_pwm);                //Configurar modulo CCP1 en modo PWM
   setup_adc_ports(sAN0);        //Configurar ADC
   setup_adc(adc_clock_internal);
///////////TECLADO//////////////
KBD_INIT();       //Inicializar el driver del teclado
//////////Secuencia de inicio//////////
lcd_gotoxy(1,1);
printf(lcd_putc, "Bienvenido");
lcd_gotoxy(1,2);
printf(lcd_putc, "Fija el SP...");
delay_ms(500);
config();
lcd_clear();
///////////////////////////////////////
   while(true)
   {
        set_adc_channel(0);   
        delay_us(100);       
        duty=read_adc(); 
        set_pwm1_duty(duty);
        temperatura=duty*0.4882;
        TECLA=tecla_time(); //Leemos el valor que devuelve la funcion para leer el teclado
        lcd_gotoxy(1, 1);
        printf(lcd_putc, "Temp: %.2f ", temperatura);   //%lu para imprimir el valor de una int16
        if(TECLA!='\0'){
           lcd_gotoxy(1,2);
           printf(lcd_putc, "%c", tecla);// imprimimos el valor del teclado
        }
        delay_ms(100);
   }
}

void config(){
// en esta funcion fijamos un nuevo SP
int posicion=4;
char SPText[2]={'\0', '\0'};
lcd_clear();
lcd_gotoxy(1,1);
printf(lcd_putc, "SP entre 0 y 99");
lcd_gotoxy(1,2);
printf(lcd_putc, "SP:");
   while(TECLA=='#'){ 
      TECLA=tecla_time();
      switch(TECLA){
         case '1':
            lcd_gotoxy(posicion,2);
            printf(lcd_putc,"1");
            SP=
            posicion++;
            break;
         case '2':
            break;
         case '3':
            break;
         case '4':
            break;
         case '5':
            break;
         case '6':
            break;
         case '7':
            break;
         case '8':
            break;
         case '9':
            break;
         case '0':
            break;
         case 'A':
            break;
         case 'B':
            break;
         case 'C':
            break;
         case 'D':
            break;
      }
    switch(posicion){
      case 4:
         multiplicador=1;
         break;
      case 6:
         multiplicador=10;
         break;
    }
   }
}
